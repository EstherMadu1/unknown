"""empty message

Revision ID: df668b548dc4
Revises: 
Create Date: 2024-12-09 01:34:55.066285

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'df668b548dc4'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('admin',
    sa.Column('admin_id', sa.Integer(), nullable=False),
    sa.Column('admin_username', sa.String(length=75), nullable=False),
    sa.Column('admin_password', sa.String(length=45), nullable=False),
    sa.Column('admin_last_login', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('admin_id'),
    sa.UniqueConstraint('admin_username')
    )
    op.create_table('category',
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('category_name', sa.String(length=25), nullable=False),
    sa.PrimaryKeyConstraint('category_id')
    )
    op.create_table('restaurants',
    sa.Column('rest_id', sa.Integer(), nullable=False),
    sa.Column('rest_name', sa.String(length=40), nullable=False),
    sa.Column('rest_phone_number', sa.String(length=20), nullable=False),
    sa.Column('rest_address', sa.Text(), nullable=False),
    sa.Column('rest_email', sa.String(length=45), nullable=False),
    sa.Column('rest_password', sa.String(length=45), nullable=False),
    sa.Column('date_registered', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('rest_id')
    )
    op.create_table('states',
    sa.Column('state_id', sa.Integer(), nullable=False),
    sa.Column('state_name', sa.String(length=15), nullable=False),
    sa.PrimaryKeyConstraint('state_id')
    )
    op.create_table('farmers',
    sa.Column('farm_id', sa.Integer(), nullable=False),
    sa.Column('farm_name', sa.String(length=50), nullable=False),
    sa.Column('farmer_first_name', sa.String(length=45), nullable=False),
    sa.Column('farmer_last_name', sa.String(length=45), nullable=False),
    sa.Column('farmer_phone_number', sa.String(length=20), nullable=False),
    sa.Column('farmer_state_id', sa.Integer(), nullable=False),
    sa.Column('farmer_address', sa.Text(), nullable=False),
    sa.Column('farmer_username', sa.String(length=20), nullable=False),
    sa.Column('farmer_password', sa.String(length=20), nullable=False),
    sa.Column('date_registered', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['farmer_state_id'], ['states.state_id'], ),
    sa.PrimaryKeyConstraint('farm_id'),
    sa.UniqueConstraint('farmer_username')
    )
    op.create_table('orders',
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('restaurant_id', sa.Integer(), nullable=False),
    sa.Column('order_date', sa.Date(), nullable=False),
    sa.Column('total_amt', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('order_stat', sa.String(length=45), nullable=False),
    sa.ForeignKeyConstraint(['restaurant_id'], ['restaurants.rest_id'], ),
    sa.PrimaryKeyConstraint('order_id')
    )
    op.create_table('payments',
    sa.Column('pay_id', sa.Integer(), nullable=False),
    sa.Column('pay_order_id', sa.Integer(), nullable=False),
    sa.Column('pay_amt', sa.String(length=45), nullable=False),
    sa.Column('pay_status', sa.String(length=45), nullable=False),
    sa.Column('reference_num', sa.String(length=45), nullable=False),
    sa.Column('date_paid', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['pay_order_id'], ['orders.order_id'], ),
    sa.PrimaryKeyConstraint('pay_id')
    )
    op.create_table('products',
    sa.Column('pro_id', sa.Integer(), nullable=False),
    sa.Column('pro_name', sa.String(length=300), nullable=False),
    sa.Column('pro_category_id', sa.Integer(), nullable=False),
    sa.Column('qua_avail', sa.Float(), nullable=False),
    sa.Column('price_per_unit', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('farm_id', sa.Integer(), nullable=False),
    sa.Column('pro_picture', sa.LargeBinary(), nullable=True),
    sa.Column('pro_status', sa.String(length=45), nullable=False),
    sa.ForeignKeyConstraint(['farm_id'], ['farmers.farm_id'], ),
    sa.ForeignKeyConstraint(['pro_category_id'], ['category.category_id'], ),
    sa.PrimaryKeyConstraint('pro_id')
    )
    op.create_table('order_items',
    sa.Column('order_item_id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('pro_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['orders.order_id'], ),
    sa.ForeignKeyConstraint(['pro_id'], ['products.pro_id'], ),
    sa.PrimaryKeyConstraint('order_item_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('order_items')
    op.drop_table('products')
    op.drop_table('payments')
    op.drop_table('orders')
    op.drop_table('farmers')
    op.drop_table('states')
    op.drop_table('restaurants')
    op.drop_table('category')
    op.drop_table('admin')
    # ### end Alembic commands ###
